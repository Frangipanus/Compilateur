
type token = 
  | VAR
  | VAL
  | THEN
  | RETURN
  | IF
  | IDENT of (
# 18 "parser.mly"
       (string)
# 12 "parser__mock.ml.mock"
)
  | FUN
  | FN
  | EOF
  | ELSE
  | ELIF

# 1 "parser.mly"
  



# 25 "parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_stmt, xv_prog, xv_list_stmt_) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 218 "<standard.mly>"
         xs
# 34 "parser__mock.ml.mock"
   : 'tv_list_stmt_) (_startpos_xs_ : Lexing.position) (_endpos_xs_ : Lexing.position) (_startofs_xs_ : int) (_endofs_xs_ : int) (_loc_xs_ : Lexing.position * Lexing.position) (
# 218 "<standard.mly>"
  x
# 38 "parser__mock.ml.mock"
   : 'tv_stmt) (_startpos_x_ : Lexing.position) (_endpos_x_ : Lexing.position) (_startofs_x_ : int) (_endofs_x_ : int) (_loc_x_ : Lexing.position * Lexing.position) : 'tv_list_stmt_ ->
    
# 219 "<standard.mly>"
    ( x :: xs )
# 43 "parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) : 'tv_list_stmt_ ->
    
# 216 "<standard.mly>"
    ( [] )
# 49 "parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 24 "parser.mly"
   _1
# 54 "parser__mock.ml.mock"
   : (
# 18 "parser.mly"
       (string)
# 58 "parser__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_stmt ->
    
# 24 "parser.mly"
         (9)
# 63 "parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 23 "parser.mly"
   _1
# 68 "parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_stmt ->
    
# 23 "parser.mly"
      (8)
# 73 "parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 29 "parser.mly"
                 _2
# 78 "parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 29 "parser.mly"
       sl
# 82 "parser__mock.ml.mock"
   : 'tv_list_stmt_) (_startpos_sl_ : Lexing.position) (_endpos_sl_ : Lexing.position) (_startofs_sl_ : int) (_endofs_sl_ : int) (_loc_sl_ : Lexing.position * Lexing.position) : (
# 20 "parser.mly"
      (int list)
# 86 "parser__mock.ml.mock"
  ) ->
    (
# 29 "parser.mly"
                      (sl)
# 91 "parser__mock.ml.mock"
     : 'tv_prog) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_stmt * 'tv_prog * 'tv_list_stmt_)

and menhir_end_marker =
  0
